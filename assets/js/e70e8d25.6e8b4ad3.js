"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[9179],{5959:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return m}});var o=n(7462),s=n(3366),i=(n(7294),n(3905)),a=n(2536),p=["components"],r={title:"Responses"},l="Response",d={unversionedId:"response",id:"response",title:"Responses",description:"A builder-like pattern is used to construct an instance of HttpResponse. HttpResponse provides several methods that return a HttpResponseBuilder instance, which implements various convenience methods for building responses.",source:"@site/docs/response.md",sourceDirName:".",slug:"/response",permalink:"/actix-website/docs/response",draft:!1,editUrl:"https://github.com/actix/actix-website/docs/response.md",tags:[],version:"current",frontMatter:{title:"Responses"},sidebar:"docs",previous:{title:"Requests",permalink:"/actix-website/docs/request"},next:{title:"Testing",permalink:"/actix-website/docs/testing"}},c={},m=[{value:"JSON Response",id:"json-response",level:2},{value:"Content encoding",id:"content-encoding",level:2}],u={toc:m};function k(e){var t=e.components,n=(0,s.Z)(e,p);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"response"},"Response"),(0,i.kt)("p",null,"A builder-like pattern is used to construct an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpResponse"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpResponse")," provides several methods that return a ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpResponseBuilder")," instance, which implements various convenience methods for building responses."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Check the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/struct.HttpResponseBuilder.html"},"documentation")," for type descriptions.")),(0,i.kt)("p",null,"The methods ",(0,i.kt)("inlineCode",{parentName:"p"},".body"),", ",(0,i.kt)("inlineCode",{parentName:"p"},".finish"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},".json")," finalize response creation and return a constructed ",(0,i.kt)("em",{parentName:"p"},"HttpResponse")," instance. If this methods is called on the same builder instance multiple times, the builder will panic."),(0,i.kt)(a.Z,{example:"responses",file:"main.rs",section:"builder",mdxType:"CodeBlock"}),(0,i.kt)("h2",{id:"json-response"},"JSON Response"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Json")," type allows to respond with well-formed JSON data: simply return a value of type ",(0,i.kt)("inlineCode",{parentName:"p"},"Json<T>")," where ",(0,i.kt)("inlineCode",{parentName:"p"},"T")," is the type of a structure to serialize into ",(0,i.kt)("em",{parentName:"p"},"JSON"),". The type ",(0,i.kt)("inlineCode",{parentName:"p"},"T")," must implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"Serialize")," trait from ",(0,i.kt)("em",{parentName:"p"},"serde"),"."),(0,i.kt)("p",null,"For the following example to work, you need to add ",(0,i.kt)("inlineCode",{parentName:"p"},"serde")," to your dependencies in ",(0,i.kt)("inlineCode",{parentName:"p"},"Cargo.toml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nserde = { version = "1.0", features = ["derive"] }\n')),(0,i.kt)(a.Z,{example:"responses",file:"json_resp.rs",section:"json-resp",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"Using the ",(0,i.kt)("inlineCode",{parentName:"p"},"Json")," type this way instead of calling the ",(0,i.kt)("inlineCode",{parentName:"p"},".json")," method on a ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpResponse")," makes it immediately clear that the function returns JSON and not any other type of response."),(0,i.kt)("h2",{id:"content-encoding"},"Content encoding"),(0,i.kt)("p",null,"Actix Web can automatically ",(0,i.kt)("em",{parentName:"p"},"compress")," payloads with the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/middleware/struct.Compress.html"},(0,i.kt)("em",{parentName:"a"},"Compress middleware")),". The following codecs are supported:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Brotli"),(0,i.kt)("li",{parentName:"ul"},"Gzip"),(0,i.kt)("li",{parentName:"ul"},"Deflate"),(0,i.kt)("li",{parentName:"ul"},"Identity")),(0,i.kt)(a.Z,{example:"responses",file:"compress.rs",section:"compress",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"Response payload is compressed based on the ",(0,i.kt)("em",{parentName:"p"},"encoding")," parameter from the ",(0,i.kt)("inlineCode",{parentName:"p"},"middleware::BodyEncoding")," trait. By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," is used. If ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," is selected, then the compression depends on the request's ",(0,i.kt)("inlineCode",{parentName:"p"},"Accept-Encoding")," header."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Identity")," can be used to disable compression. If another content encoding is selected, the compression is enforced for that codec.")),(0,i.kt)("p",null,"For example, to enable ",(0,i.kt)("inlineCode",{parentName:"p"},"brotli")," for a single handler use ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Br"),":"),(0,i.kt)(a.Z,{example:"responses",file:"brotli.rs",section:"brotli",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"or for the entire application:"),(0,i.kt)(a.Z,{example:"responses",file:"brotli_two.rs",section:"brotli-two",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"In this case we explicitly disable content compression by setting content encoding to an ",(0,i.kt)("inlineCode",{parentName:"p"},"Identity")," value:"),(0,i.kt)(a.Z,{example:"responses",file:"identity.rs",section:"identity",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"When dealing with an already compressed body (for example when serving assets), set the content encoding to ",(0,i.kt)("inlineCode",{parentName:"p"},"Identity")," to avoid compressing the already compressed data and set the ",(0,i.kt)("inlineCode",{parentName:"p"},"content-encoding")," header manually:"),(0,i.kt)(a.Z,{example:"responses",file:"identity_two.rs",section:"identity-two",mdxType:"CodeBlock"}),(0,i.kt)("p",null,"Also it is possible to set default content encoding on application level, by default ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," is used, which implies automatic content compression negotiation."),(0,i.kt)(a.Z,{example:"responses",file:"auto.rs",section:"auto",mdxType:"CodeBlock"}))}k.isMDXComponent=!0}}]);