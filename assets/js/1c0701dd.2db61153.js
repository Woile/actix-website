"use strict";(self.webpackChunkactix_website=self.webpackChunkactix_website||[]).push([[6235],{2350:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var i=a(7462),s=a(3366),r=(a(7294),a(3905)),n=a(2536),o=["components"],l={title:"Middleware"},d="Middleware",p={unversionedId:"middleware",id:"middleware",title:"Middleware",description:"Actix Web's middleware system allows us to add additional behavior to request/response processing. Middleware can hook into an incoming request process, enabling us to modify requests as well as halt request processing to return a response early.",source:"@site/docs/middleware.md",sourceDirName:".",slug:"/middleware",permalink:"/actix-website/docs/middleware",draft:!1,editUrl:"https://github.com/actix/actix-website/docs/middleware.md",tags:[],version:"current",frontMatter:{title:"Middleware"},sidebar:"docs",previous:{title:"Testing",permalink:"/actix-website/docs/testing"},next:{title:"Static Files",permalink:"/actix-website/docs/static-files"}},m={},c=[{value:"Logging",id:"logging",level:2},{value:"Usage",id:"usage",level:3},{value:"Format",id:"format",level:3},{value:"Default headers",id:"default-headers",level:3},{value:"User sessions",id:"user-sessions",level:2},{value:"Error handlers",id:"error-handlers",level:2}],u={toc:c};function k(e){var t=e.components,a=(0,s.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"middleware"},"Middleware"),(0,r.kt)("p",null,"Actix Web's middleware system allows us to add additional behavior to request/response processing. Middleware can hook into an incoming request process, enabling us to modify requests as well as halt request processing to return a response early."),(0,r.kt)("p",null,"Middleware can also hook into response processing."),(0,r.kt)("p",null,"Typically, middleware is involved in the following actions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pre-process the Request"),(0,r.kt)("li",{parentName:"ul"},"Post-process a Response"),(0,r.kt)("li",{parentName:"ul"},"Modify application state"),(0,r.kt)("li",{parentName:"ul"},"Access external services (redis, logging, sessions)")),(0,r.kt)("p",null,"Middleware is registered for each ",(0,r.kt)("inlineCode",{parentName:"p"},"App"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"scope"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"Resource")," and executed in opposite order as registration. In general, a ",(0,r.kt)("em",{parentName:"p"},"middleware")," is a type that implements the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/dev/trait.Service.html"},(0,r.kt)("em",{parentName:"a"},"Service trait"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/dev/trait.Transform.html"},(0,r.kt)("em",{parentName:"a"},"Transform trait")),". Each method in the traits has a default implementation. Each method can return a result immediately or a ",(0,r.kt)("em",{parentName:"p"},"future")," object."),(0,r.kt)("p",null,"The following demonstrates creating a simple middleware:"),(0,r.kt)(n.Z,{example:"middleware",file:"main.rs",section:"simple",mdxType:"CodeBlock"}),(0,r.kt)("p",null,"Alternatively, for simple use cases, you can use ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/4/actix_web/struct.App.html#method.wrap_fn"},(0,r.kt)("em",{parentName:"a"},"wrap_fn"))," to create small, ad-hoc middleware:"),(0,r.kt)(n.Z,{example:"middleware",file:"wrap_fn.rs",section:"wrap-fn",mdxType:"CodeBlock"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Actix Web provides several useful middleware, such as ",(0,r.kt)("em",{parentName:"p"},"logging"),", ",(0,r.kt)("em",{parentName:"p"},"user sessions"),", ",(0,r.kt)("em",{parentName:"p"},"compress"),", etc.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Warning: if you use ",(0,r.kt)("inlineCode",{parentName:"strong"},"wrap()")," or ",(0,r.kt)("inlineCode",{parentName:"strong"},"wrap_fn()")," multiple times, the last occurrence will be executed first.")),(0,r.kt)("h2",{id:"logging"},"Logging"),(0,r.kt)("p",null,"Logging is implemented as a middleware. It is common to register a logging middleware as the first middleware for the application. Logging middleware must be registered for each application."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," middleware uses the standard log crate to log information. You should enable logger for ",(0,r.kt)("em",{parentName:"p"},"actix_web")," package to see access log (",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/env_logger/*/env_logger/"},"env_logger")," or similar)."),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," middleware with the specified ",(0,r.kt)("inlineCode",{parentName:"p"},"format"),". Default ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," can be created with ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," method, it uses the default format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ignore"},'  %a %t "%r" %s %b "%{Referer}i" "%{User-Agent}i" %T\n')),(0,r.kt)(n.Z,{example:"middleware",file:"logger.rs",section:"logger",mdxType:"CodeBlock"}),(0,r.kt)("p",null,"The following is an example of the default logging format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'INFO:actix_web::middleware::logger: 127.0.0.1:59934 [02/Dec/2017:00:21:43 -0800] "GET / HTTP/1.1" 302 0 "-" "curl/7.54.0" 0.000397\nINFO:actix_web::middleware::logger: 127.0.0.1:59947 [02/Dec/2017:00:22:40 -0800] "GET /index.html HTTP/1.1" 200 0 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:57.0) Gecko/20100101 Firefox/57.0" 0.000646\n')),(0,r.kt)("h3",{id:"format"},"Format"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%%")," The percent sign"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%a")," Remote IP-address (IP-address of proxy if using reverse proxy)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%t")," Time when the request was started to process"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%P")," The process ID of the child that serviced the request"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%r")," First line of request"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%s")," Response status code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%b")," Size of response in bytes, including HTTP headers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%T")," Time taken to serve the request, in seconds with floating fraction in .06f format"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%D")," Time taken to serve the request, in milliseconds"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}i")," request.headers","['FOO']"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}o")," response.headers","['FOO']"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}e")," os.environ","['FOO']")),(0,r.kt)("h3",{id:"default-headers"},"Default headers"),(0,r.kt)("p",null,"To set default response headers, the ",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultHeaders")," middleware can be used. The ",(0,r.kt)("em",{parentName:"p"},"DefaultHeaders")," middleware does not set the header if response headers already contain a specified header."),(0,r.kt)(n.Z,{example:"middleware",file:"default_headers.rs",section:"default-headers",mdxType:"CodeBlock"}),(0,r.kt)("h2",{id:"user-sessions"},"User sessions"),(0,r.kt)("p",null,"Actix Web provides a general solution for session management. The ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/0.3.0/actix_session/"},(0,r.kt)("strong",{parentName:"a"},"actix-session"))," middleware can use multiple backend types to store session data."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"By default, only cookie session backend is implemented. Other backend implementations can be added.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/0.3.0/actix_session/struct.CookieSession.html"},(0,r.kt)("strong",{parentName:"a"},"CookieSession"))," uses cookies as session storage. ",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSessionBackend")," creates sessions which are limited to storing fewer than 4000 bytes of data, as the payload must fit into a single cookie. An internal server error is generated if a session contains more than 4000 bytes."),(0,r.kt)("p",null,"A cookie may have a security policy of ",(0,r.kt)("em",{parentName:"p"},"signed")," or ",(0,r.kt)("em",{parentName:"p"},"private"),". Each has a respective ",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSession")," constructor."),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"signed")," cookie may be viewed but not modified by the client. A ",(0,r.kt)("em",{parentName:"p"},"private")," cookie may neither be viewed nor modified by the client."),(0,r.kt)("p",null,"The constructors take a key as an argument. This is the private key for cookie session - when this value is changed, all session data is lost."),(0,r.kt)("p",null,"In general, you create a ",(0,r.kt)("inlineCode",{parentName:"p"},"SessionStorage")," middleware and initialize it with specific backend implementation, such as a ",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSession"),". To access session data the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/0.3.0/actix_session/struct.Session.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Session"))," extractor must be used. This method returns a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/0.3.0/actix_session/struct.Session.html"},(0,r.kt)("em",{parentName:"a"},"Session"))," object, which allows us to get or set session data."),(0,r.kt)(n.Z,{example:"middleware",file:"user_sessions.rs",section:"user-session",mdxType:"CodeBlock"}),(0,r.kt)("h2",{id:"error-handlers"},"Error handlers"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ErrorHandlers")," middleware allows us to provide custom handlers for responses."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ErrorHandlers::handler()")," method to register a custom error handler for a specific status code. You can modify an existing response or create a completly new one. The error handler can return a response immediately or return a future that resolves into a response."),(0,r.kt)(n.Z,{example:"middleware",file:"errorhandler.rs",section:"error-handler",mdxType:"CodeBlock"}))}k.isMDXComponent=!0}}]);